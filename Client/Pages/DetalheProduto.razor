@page "/detalhe-produto"
@using WebAdmin.Client.Shared.Produtos
@using WebAdmin.Shared.Models;
@inject HttpClient Http

<h1>Detalhe do produto</h1>

<div class="c-container">
    <h2 class="c-container__title">Informações básicas</h2>

    <div class="c-group">
        <div class="c-group__item">
            <div class="c-form__field">
                <label class="c-form__label" for="">Nome do Produto</label>
                <input class="c-form__input" type="text" id="" @bind="@Produto.Nome">
            </div>
            <div class="c-form__field">
                <label class="c-form__label" for="">Descrição</label>
                <textarea class="c-form__textarea" type="text" id="" @bind="@Produto.Descricao"></textarea>
            </div>
        </div>

        <div class="c-images c-group__item">
            <div class="c-images__item">
            </div>
            <div class="c-images__item">
            </div>
            <div class="c-images__item">
            </div>
            <div class="c-images__item">
            </div>
        </div>
    </div>
</div>

<div class="c-container">
    <h2 class="c-container__title">Características que deverão ser selecionadas pelo usuário</h2>

    <CamposComponent></CamposComponent>

    <hr />
    <button class="c-btn__tertiary">
        +
        <span>Adicionar campo</span>
    </button>
</div>
<div class="c-btn__group">
    <button class="c-btn__secondary-danger">
        <span>Cancelar</span>
    </button>
    <button class="c-btn__primary">
        <span>Salvar alterações</span>
    </button>
</div>

@code {
    public string Texto { get; set; }
    int i = 1;
    List<string> values = new List<string>();
    public void Closed(MudChip chip) => values.Remove(chip.Text);

    protected ProdutoModel Produto = new ProdutoModel();

    protected List<ProdutoModel>? Produtos = new List<ProdutoModel>();

    protected override async Task OnInitializedAsync()
    {
        await GetProduto("0MHUxGuthSK5TecioMwu");
    }

    protected async Task GetProduto(string id)
    {
        Produto = await Http.GetFromJsonAsync<ProdutoModel>("Produto/" + id);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            values.Add(Texto);
            Texto = "";
        }
    }

    protected async Task EmployeeDeleted()
    {
        Employees = (await EmployeeService.GetEmployees()).ToList();
    }
}