@using WebAdmin.Client.Services.Interfaces;
@using WebAdmin.Shared.Models;
<div class="c-group__item">
    <div class="c-character">
        <div class="c-form__field">
            <label class="c-form__label" for="">Nome do campo</label>
            <input class="c-form__input" type="text" id="" @bind="@Campo.Input">
        </div>
        <div class="c-form__field">
            <label class="c-form__label" for="">Informativo</label>
            <input class="c-form__input" type="text" id="" @bind="@Campo.Informativo">
        </div>
        <div class="c-checkbox__group">
            <input class="c-checkbox" id="c-check" type="checkbox" @bind="@Campo.Obrigatorio">
            <label class="c-form__label" for="c-check">Campo obrigatório</label>
        </div>
    </div>
    <div class="c-form__field">
        <label class="c-form__label" for="">Opções disponíveis</label>
        <input class="c-form__input" type="text" id="" @bind="@NovaOpcao" @onkeyup="@Enter">

        <MudChipSet AllClosable="true" OnClose="Closed">
            @if (Campo.Opcoes.Count() > 0)
            {
                @foreach (var value in Campo.Opcoes)
                {
                    <MudChip Text="@value" Color="Color.Primary"></MudChip>
                }

            }
        </MudChipSet>
    </div>
    <button class="c-btn__tertiary-danger" @onclick="Delete_Click">
        X
        <span>Remover campo</span>
    </button>
</div>

@code {

    public string NovaOpcao { get; set; }

    [Parameter]
    public EventCallback<CampoModel> OnCampoDeleted { get; set; }

    [Parameter]
    public CampoModel Campo { get; set; }

    [Inject]
    public ICampoService CampoService { get; set; }

    protected async Task Delete_Click()
    {
        CampoService.DeleteCampo(Campo);
        await OnCampoDeleted.InvokeAsync(Campo);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            Campo.Opcoes.Add(NovaOpcao);
            NovaOpcao = "";
        }
    }

    public void Closed(MudChip chip) => Campo.Opcoes.Remove(chip.Text);
}
